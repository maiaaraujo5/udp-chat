// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	list "container/list"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Flush provides a mock function with given fields: parentCtx
func (_m *Repository) Flush(parentCtx context.Context) error {
	ret := _m.Called(parentCtx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(parentCtx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// List provides a mock function with given fields: parentCtx
func (_m *Repository) List(parentCtx context.Context) (*list.List, error) {
	ret := _m.Called(parentCtx)

	var r0 *list.List
	if rf, ok := ret.Get(0).(func(context.Context) *list.List); ok {
		r0 = rf(parentCtx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*list.List)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(parentCtx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveAll provides a mock function with given fields: parentCtx, messages
func (_m *Repository) SaveAll(parentCtx context.Context, messages *list.List) error {
	ret := _m.Called(parentCtx, messages)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *list.List) error); ok {
		r0 = rf(parentCtx, messages)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
